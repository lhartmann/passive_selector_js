// License GNU Affero-GPL
// (c) 2020, Lucas V. Hartmann
// For more information, see https://en.wikipedia.org/wiki/Preferred_number

E3   = [ 10,                 22,                 47]; // Non-standard
E4   = [ 10,            18,            33,            56]; // Non-standard
E6   = [ 10,       15,       22,       33,       47,       68];
E12  = [ 10,  12,  15,  18,  22,  27,  33,  39,  47,  56,  68,  82];
E24  = [ 10,  12,  15,  18,  22,  27,  33,  39,  47,  56,  68,  82,
         11,  13,  16,  20,  24,  30,  36,  43,  51,  62,  75,  91];
E48  = [100, 121, 147, 178, 215, 261, 316, 383, 464, 562, 681, 825,
        105, 127, 154, 187, 226, 274, 332, 402, 487, 590, 715, 866,
        110, 133, 162, 196, 237, 287, 348, 422, 511, 619, 750, 909,
        115, 140, 169, 205, 249, 301, 365, 442, 536, 649, 787, 953];
E96  = [100, 121, 147, 178, 215, 261, 316, 383, 464, 562, 681, 825,
        102, 124, 150, 182, 221, 267, 324, 392, 475, 576, 698, 845,
        105, 127, 154, 187, 226, 274, 332, 402, 487, 590, 715, 866,
        107, 130, 158, 191, 232, 280, 340, 412, 499, 604, 732, 887,
        110, 133, 162, 196, 237, 287, 348, 422, 511, 619, 750, 909,
        113, 137, 165, 200, 243, 294, 357, 432, 523, 634, 768, 931,
        115, 140, 169, 205, 249, 301, 365, 442, 536, 649, 787, 953,
        118, 143, 174, 210, 255, 309, 374, 453, 549, 665, 806, 976];
E192 = [100, 121, 147, 178, 215, 261, 316, 383, 464, 562, 681, 825,
        101, 123, 149, 180, 218, 264, 320, 388, 470, 569, 690, 835,
        102, 124, 150, 182, 221, 267, 324, 392, 475, 576, 698, 845,
        104, 126, 152, 184, 223, 271, 328, 397, 481, 583, 706, 856,
        105, 127, 154, 187, 226, 274, 332, 402, 487, 590, 715, 866,
        106, 129, 156, 189, 229, 277, 336, 407, 493, 597, 723, 876,
        107, 130, 158, 191, 232, 280, 340, 412, 499, 604, 732, 887,
        109, 132, 160, 193, 234, 284, 344, 417, 505, 612, 741, 898,
        110, 133, 162, 196, 237, 287, 348, 422, 511, 619, 750, 909,
        111, 135, 164, 198, 240, 291, 352, 427, 517, 626, 759, 920,
        113, 137, 165, 200, 243, 294, 357, 432, 523, 634, 768, 931,
        114, 138, 167, 203, 246, 298, 361, 437, 530, 642, 777, 942,
        115, 140, 169, 205, 249, 301, 365, 442, 536, 649, 787, 953,
        117, 142, 172, 208, 252, 305, 370, 448, 542, 657, 796, 965,
        118, 143, 174, 210, 255, 309, 374, 453, 549, 665, 806, 976,
        120, 145, 176, 213, 258, 312, 379, 459, 556, 673, 816, 988];
E3.sort();
E6.sort();
E12.sort();
E24.sort();
E48.sort();
E96.sort();
E192.sort();

function grow(min, max, E) {
    var r = new Array();
    var p0 = Math.floor(Math.log(min)/Math.log(10)) - 2;
    var p1 = Math.ceil(Math.log(max)/Math.log(10)) + 2;
    for (var p = p0; p<=p1; p++) {
        for (var i=0; i<E.length; ++i) {
            var x = E[i] * Math.pow(10, p);
            if (min <= x && x <= max)
                r[r.length] = x;
        }
    }
    return r;
}

function myround(val,n) {
	var b = Math.pow(10, Math.floor(Math.log(val)/Math.log(10)));
	return Math.round(val*Math.pow(10,n)/b)*b/Math.pow(10,n);
}

function nice(val, n=4) {
	var scale = [
		[ 'f', 1e-15 ],
		[ 'p', 1e-12 ],
		[ 'n', 1e-09 ],
		[ 'u', 1e-06 ],
		[ 'm', 1e-03 ],
		[  '', 1e+00 ],
		[ 'k', 1e+03 ],
		[ 'M', 1e+06 ],
		[ 'G', 1e+09 ],
		[ 'T', 1e+12 ]
	];
	
	// Too small to scale, make pretty
	if (val < 1e-15) return ''+myround(val,n);
	
	var sign = '';
	if (val==0) return val;
	if (val<0) {
		sign = '-';
		val = -val;
	}
	
	for (var i=0; i<scale.length; ++i) {
		// Rounded magnitude
		var rm = myround(val/scale[i][1],n);
		if (rm < 1000) {
			return sign + rm + scale[i][0];
		}
	}
	
	// Too large to scale
	return sign + val;
}

module.exports = {
    E3: E3,
    E4: E4,
    E6: E6,
    E12: E12,
    E24: E24,
    E48: E48,
    E96: E96,
    E192: E192,
    grow: grow,
    nice: nice
};
